/*
 * This source file was generated by the Gradle 'init' task
 */
package org.banking.management;

import org.banking.management.dao.AccountantDao;
import org.banking.management.dao.AccountantDaoImplementation;
import org.banking.management.dao.CustomerDao;
import org.banking.management.dao.CustomerDaoImplementation;
import org.banking.management.entity.Accountant;
import org.banking.management.entity.Address;
import org.banking.management.entity.Customer;
import org.banking.management.exception.AccountantException;
import org.banking.management.exception.CustomerException;
import org.banking.management.utils.AccountUtils;
import org.banking.management.utils.PasswordUtils;

import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (;;) {
            System.out.println("------------WELCOME TO ONLINE BANKING SYSTEM------------");
            System.out.println("--------------------------------------------------------");
            System.out.println("1. ADMIN LOGIN PORTAL \n2. CUSTOMER LOGIN PORTAL");
            System.out.println("0. EXIT ONLINE BANKING!");
            System.out.println("Choose your option: ");

            int choice = sc.nextInt();

            switch (choice) {
                case 1 -> {
                    System.out.println("ADMIN LOGIN CREDENTIALS ---------------- ACCOUNTANT");
                    System.out.print("ENTER USERNAME: ");
                    String username = sc.next();
                    System.out.print("ENTER PASSWORD: ");
                    String password = sc.next();

                    AccountantDao accountantDao = new AccountantDaoImplementation();

                    try {
                        Accountant accountant = accountantDao.loginAccountant(username, password);

                        if (accountant == null) {
                            System.out.println("❌ WRONG CREDENTIALS");
                            continue;
                        }

                        System.out.println("✅ LOGIN SUCCESSFUL!!!!");
                        System.out.println("WELCOME " + accountant.getUserName().toUpperCase() + " AS ADMIN");

                        // Admin menu loop
                        for (;;) {
                            System.out.println("---------------------------");
                            System.out.println("1. Add New Customer Account");
                            System.out.println("2. Show all User list");
                            System.out.println("3. Update Customer Address");
                            System.out.println("4. Show Customer Profile");
                            System.out.println("5. Delete a Customer");
                            System.out.println("0. Logout");
                            int accountantChoice = sc.nextInt();

                            if (accountantChoice == 1) {
                                try {
                                    System.out.println("-------- New Account For Customer ---------");
                                    System.out.print("Enter Customer Name: ");
                                    String customerName = sc.next();
                                    System.out.print("Enter Customer Email: ");
                                    String customerEmail = sc.next();
                                    System.out.print("Enter Customer Password: ");
                                    String customerPassword = sc.next();
                                    System.out.print("Country: ");
                                    String country = sc.next();
                                    System.out.print("City: ");
                                    String city = sc.next();
                                    System.out.print("Post Code: ");
                                    int postCode = sc.nextInt();
                                    System.out.print("Contact Number: ");
                                    String contactNo = sc.next();
                                    System.out.print("Enter the initial deposit: ");
                                    int initialDeposit = sc.nextInt();


                                    int customerId = accountantDao.addCustomer(
                                            customerName,
                                            customerEmail,
                                            PasswordUtils.hashPassword(customerPassword),
                                            initialDeposit,
                                            country,
                                            city,
                                            postCode,
                                            contactNo
                                    );

                                    System.out.println("✅ Customer added successfully with ID: " + customerId);
                                } catch (AccountantException acEx) {
                                    System.out.println("❌ " + acEx.getMessage());
                                }
                            } else if (accountantChoice == 0) {
                                System.out.println("Logging out...");
                                break; // exit admin menu
                            } else if(accountantChoice == 2){
                                System.out.println("------------All Customer-----------");
                                try {
                                    AccountantDao.showAllCustomers();
                                } catch (AccountantException acEx) {
                                    System.out.println(acEx.getMessage());
                                }
                                System.out.println("------------------------------------");
                            } else if (accountantChoice == 3) {
                                System.out.println("--------Update Address------");
                                System.out.println("Enter Customer Address Information->");
                                System.out.print("Enter the customer id: ");
                                int customerId = sc.nextInt();
                                System.out.print("Country: ");
                                String country = sc.next();
                                System.out.print("City: ");
                                String city = sc.next();
                                System.out.print("Post Code: ");
                                int post_code = sc.nextInt();
                                System.out.print("Contact No: ");
                                String contact_no = sc.next();
                                Address customerAddress = new Address(
                                        country,
                                        city,
                                        post_code,
                                        contact_no
                                );

                                try{
                                    System.out.println(accountantDao.updateCustomerAddress(customerId, customerAddress));
                                }catch (AccountantException acEx){
                                    System.out.println(acEx.getMessage());
                                }

                            } else if(accountantChoice == 4){
                                System.out.println("-------View User Profile------------");
                                System.out.print("Enter customer Id: ");
                                int customerId = sc.nextInt();
                                try{
                                    AccountUtils.showIndividualAccountInfo(customerId);
                                } catch (CustomerException e) {
                                    System.out.println("NO user Found with the given Id." + e.getMessage());
                                }
                            }
                            else if(accountantChoice == 5) {
                                System.out.println("--------Delete Customer----------");
                                System.out.print("Enter customer Id: ");
                                int customerId = sc.nextInt();
                                try {
                                    accountantDao.deleteCustomerAccount(customerId);
                                } catch (AccountantException acEx) {
                                    System.out.println(acEx.getMessage());
                                }
                            }
                        }

                    } catch (AccountantException acEx) {
                        System.out.println("❌ Error: " + acEx.getMessage());
                    } catch (Exception e) {
                        System.out.println("⚠️ Unexpected error: " + e.getMessage());
                    }
                }

                case 2 -> {
                    System.out.println("----------Customer Login-------------");
                    System.out.print("Enter your email: ");
                    String email = sc.next();
                    System.out.print("Enter your password: ");
                    String password = sc.next();

                    CustomerDao customerDao = new CustomerDaoImplementation();
                    try(Customer customer = customerDao.customerLogin(email, password)){
                        if(customer != null){
                            for (;;){
                                System.out.println("-----Welcome " + customer.getName().toUpperCase() + " in your Dashboard--------");
                                System.out.println("1. View Profile.");
                                System.out.println("2. Show Balance");
                                System.out.println("3. Deposit Balance");
                                System.out.println("4. Withdraw Balance");
                                System.out.println("5. Transfer Balance");
                                System.out.println("0. Logout!");
                                System.out.println("Enter your choice: ");
                                int accountChoice = sc.nextInt();

                                if(accountChoice == 1){
                                    try{
                                        AccountUtils.showIndividualAccountInfo(customer.getId());
                                    } catch (CustomerException e) {
                                        System.out.println(e.getMessage());
                                    }
                                }else if(accountChoice == 2){
                                    try{
                                        System.out.println("Your current balance is: " +
                                                customerDao.showBalance(customer.getId()));
                                    } catch (CustomerException e) {
                                        System.out.println(e.getMessage());
                                    }
                                }else if(accountChoice == 3) {
                                    try {
                                        System.out.println("----Deposit Section----");
                                        System.out.println("Enter deposit amount: ");
                                        int amount = sc.nextInt();
                                        if(customerDao.deposit(customer.getId(), amount)){
                                            System.out.println("Deposit Successful!");
                                            System.out.println("Current balance: " +
                                              customerDao.showBalance(customer.getId()) + " taka"
                                            );
                                        }
                                    } catch (CustomerException e) {
                                        System.out.println(e.getMessage());
                                    }
                                } else if(accountChoice == 4) {
                                    System.out.println("--------Withdrawal Section--------");
                                    System.out.println("Enter the Amount to withdraw.");
                                    int withdrawAmount = sc.nextInt();

                                    try{
                                        int currentBalance = customerDao.showBalance(customer.getId());
                                        if(withdrawAmount > currentBalance){
                                            throw new CustomerException("Insufficient Balance!!!");
                                        }
                                        if(customerDao.withdrawBalance(customer.getId(), withdrawAmount)){
                                            System.out.println(withdrawAmount + " taka has been withdrawn!");
                                        }
                                        System.out.println("Your current balance is: " +
                                                customerDao.showBalance(customer.getId()) + " taka"
                                        );
                                    } catch (CustomerException ce) {
                                        System.out.println(ce.getMessage());
                                    }
                                }else if(accountChoice == 5){
                                    System.out.println("---------Transfer Balance Section---------");
                                    System.out.print("Enter the Recipient Id: ");
                                    int recipientId = sc.nextInt();
                                    System.out.print("Enter the amount you want to transfer: ");
                                    int transferAmount = sc.nextInt();
                                    try{
                                        customerDao.transferBalance(customer.getId(), recipientId, transferAmount);
                                    } catch (CustomerException ce) {
                                        System.out.println(ce.getMessage());
                                    }

                                }else if (accountChoice == 0) {
                                    System.out.println("Logging Out.....");
                                    break;
                                }
                            }
                        }
                    }catch(CustomerException ce){
                        System.out.println();
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                }

                case 0 -> {
                    System.out.println("Exiting....");
                }
                default -> {
                    System.out.println("❌ Invalid option, try again.");
                }
            }

            break;
        }
    }
}
